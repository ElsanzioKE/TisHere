{"ast":null,"code":"var _jsxFileName = \"/home/lesuuda/alx/TisHere/frontend/src/components/CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  addPost\n}) => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState('');\n  const [group, setGroup] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!description || !image || !group) {\n      setError('All fields are required');\n      return;\n    }\n    const response = await fetch('http://localhost:5000/api/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        description,\n        image,\n        group\n      })\n    });\n    if (response.ok) {\n      const newPost = await response.json();\n      addPost(newPost);\n      setDescription('');\n      setImage('');\n      setGroup('');\n      setError('');\n    } else {\n      const errorData = await response.json();\n      setError(errorData.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group\",\n        value: group,\n        onChange: e => setGroup(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image URL\",\n        value: image,\n        onChange: e => setImage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"What's on your mind?\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"ynbFcx0SyQpjWFwarZrjxNQuq8w=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePost","addPost","_s","description","setDescription","image","setImage","group","setGroup","error","setError","handleSubmit","e","preventDefault","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","newPost","json","errorData","message","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lesuuda/alx/TisHere/frontend/src/components/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CreatePost = ({ addPost }) => {\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState('');\n  const [group, setGroup] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n\n    if (!description || !image || !group) {\n      setError('All fields are required');\n      return;\n    }\n\n    const response = await fetch('http://localhost:5000/api/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({ description, image, group })\n    });\n\n    if (response.ok) {\n      const newPost = await response.json();\n      addPost(newPost);\n      setDescription('');\n      setImage('');\n      setGroup('');\n      setError('');\n    } else {\n      const errorData = await response.json();\n      setError(errorData.message);\n    }\n  };\n\n  return (\n    <div className=\"create-post\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Group\"\n          value={group}\n          onChange={(e) => setGroup(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Image URL\"\n          value={image}\n          onChange={(e) => setImage(e.target.value)}\n        />\n        <textarea\n          placeholder=\"What's on your mind?\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button type=\"submit\">Post</button>\n      </form>\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default CreatePost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACb,WAAW,IAAI,CAACE,KAAK,IAAI,CAACE,KAAK,EAAE;MACpCG,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASN,KAAM;MACnC,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEpB,WAAW;QAAEE,KAAK;QAAEE;MAAM,CAAC;IACpD,CAAC,CAAC;IAEF,IAAIU,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACrCzB,OAAO,CAACwB,OAAO,CAAC;MAChBrB,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM;MACL,MAAMiB,SAAS,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvChB,QAAQ,CAACiB,SAAS,CAACC,OAAO,CAAC;IAC7B;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B/B,OAAA;MAAMgC,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBAC3B/B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE3B,KAAM;QACb4B,QAAQ,EAAGvB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFzC,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGvB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFzC,OAAA;QACEkC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE/B,WAAY;QACnBgC,QAAQ,EAAGvB,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFzC,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACN/B,KAAK,iBAAIV,OAAA;MAAA+B,QAAA,EAAIrB;IAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACtC,EAAA,CA9DIF,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAgEhB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}