{"ast":null,"code":"var _jsxFileName = \"/home/lesuuda/alx/TisHere/frontend/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState('');\n  const [mediaUrl, setMediaUrl] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPosts(data);\n      } else {\n        setError('Error fetching posts');\n      }\n    } catch (err) {\n      setError('Failed to fetch posts');\n    }\n  };\n  const handleCreatePost = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content,\n          media_url: mediaUrl\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPosts([data, ...posts]);\n        setContent('');\n        setMediaUrl('');\n      } else {\n        setError('Error creating post');\n      }\n    } catch (err) {\n      setError('Failed to create post');\n    }\n  };\n  const handleLikePost = async postId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        fetchPosts();\n      } else {\n        setError('Error liking post');\n      }\n    } catch (err) {\n      setError('Failed to like post');\n    }\n  };\n  const handleUnlikePost = async postId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        fetchPosts();\n      } else {\n        setError('Error unliking post');\n      }\n    } catch (err) {\n      setError('Failed to unlike post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Write a post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mediaUrl,\n        onChange: e => setMediaUrl(e.target.value),\n        placeholder: \"Media URL (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), post.media_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.media_url,\n          alt: \"Post media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLikePost(post.id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUnlikePost(post.id),\n          children: \"Unlike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"Y3FOiFMMXSL2FhJQE1Kb6GQhkLE=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","content","setContent","mediaUrl","setMediaUrl","error","setError","fetchPosts","token","localStorage","getItem","response","fetch","headers","ok","data","json","err","handleCreatePost","method","body","JSON","stringify","media_url","handleLikePost","postId","handleUnlikePost","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","type","onClick","map","post","src","alt","id","_c","$RefreshReg$"],"sources":["/home/lesuuda/alx/TisHere/frontend/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState('');\n  const [mediaUrl, setMediaUrl] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setPosts(data);\n      } else {\n        setError('Error fetching posts');\n      }\n    } catch (err) {\n      setError('Failed to fetch posts');\n    }\n  };\n\n  const handleCreatePost = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content, media_url: mediaUrl })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setPosts([data, ...posts]);\n        setContent('');\n        setMediaUrl('');\n      } else {\n        setError('Error creating post');\n      }\n    } catch (err) {\n      setError('Failed to create post');\n    }\n  };\n\n  const handleLikePost = async (postId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        fetchPosts();\n      } else {\n        setError('Error liking post');\n      }\n    } catch (err) {\n      setError('Failed to like post');\n    }\n  };\n\n  const handleUnlikePost = async (postId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        fetchPosts();\n      } else {\n        setError('Error unliking post');\n      }\n    } catch (err) {\n      setError('Failed to unlike post');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      <div>\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"Write a post...\"\n        />\n        <input\n          type=\"text\"\n          value={mediaUrl}\n          onChange={(e) => setMediaUrl(e.target.value)}\n          placeholder=\"Media URL (optional)\"\n        />\n        <button onClick={handleCreatePost}>Post</button>\n      </div>\n      {error && <div>{error}</div>}\n      <div>\n        {posts.map((post) => (\n          <div key={post.id}>\n            <p>{post.content}</p>\n            {post.media_url && <img src={post.media_url} alt=\"Post media\" />}\n            <button onClick={() => handleLikePost(post.id)}>Like</button>\n            <button onClick={() => handleUnlikePost(post.id)}>Unlike</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}