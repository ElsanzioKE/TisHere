{"ast":null,"code":"var _jsxFileName = \"/home/lesuuda/alx/TisHere/frontend/src/components/CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  addPost\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [mediaUrl, setMediaUrl] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token found');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content,\n          media_url: mediaUrl\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        addPost(data);\n        setContent('');\n        setMediaUrl('');\n      } else {\n        const responseData = await response.json();\n        setError(responseData.message || 'Error creating post');\n      }\n    } catch (error) {\n      setError('Failed to create post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Write a post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mediaUrl,\n        onChange: e => setMediaUrl(e.target.value),\n        placeholder: \"Media URL (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"/K5kNpuMD7vdYQNmg2AILwAUH78=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePost","addPost","_s","content","setContent","mediaUrl","setMediaUrl","error","setError","handleSubmit","e","preventDefault","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","media_url","ok","data","json","responseData","message","className","children","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/lesuuda/alx/TisHere/frontend/src/components/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CreatePost = ({ addPost }) => {\n    const [content, setContent] = useState('');\n    const [mediaUrl, setMediaUrl] = useState('');\n    const [error, setError] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        if (!token) {\n            setError('No token found');\n            return;\n        }\n\n        try {\n            const response = await fetch('http://localhost:5000/api/posts', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ content, media_url: mediaUrl })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                addPost(data);\n                setContent('');\n                setMediaUrl('');\n            } else {\n                const responseData = await response.json();\n                setError(responseData.message || 'Error creating post');\n            }\n        } catch (error) {\n            setError('Failed to create post');\n        }\n    };\n\n    return (\n        <div className=\"create-post\">\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    placeholder=\"Write a post...\"\n                />\n                <input\n                    type=\"text\"\n                    value={mediaUrl}\n                    onChange={(e) => setMediaUrl(e.target.value)}\n                    placeholder=\"Media URL (optional)\"\n                />\n                <button type=\"submit\">Post</button>\n            </form>\n            {error && <div className=\"error\">{error}</div>}\n        </div>\n    );\n};\n\nexport default CreatePost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}